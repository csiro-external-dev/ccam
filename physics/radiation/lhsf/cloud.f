! Conformal Cubic Atmospheric Model
    
! Copyright 2015 Commonwealth Scientific Industrial Research Organisation (CSIRO)
    
! This file is part of the Conformal Cubic Atmospheric Model (CCAM)
!
! CCAM is free software: you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version.
!
! CCAM is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License
! along with CCAM.  If not, see <http://www.gnu.org/licenses/>.

!------------------------------------------------------------------------------
      
      subroutine cloud (cldoff,sig,j,rhg)   ! jlm
!     this one allows different emissivities for middle & high clouds      
      use extraout_m
      use newmpar_m
      use parm_m
      use radisw_m
      parameter (ntest=0) ! 0 to turn off test prints
!     This version for both DARLAM and C-C model with nclds error fixed
c     prior version of this routine saved cloudlo-hi diagnostics wrongly 18/3/99
c     this one no longer calls (old) cldset, so don't need date, xlat or dcflag
c     parameter settings for the longwave and shortwave radiation code:
c          imax   =  no. points along the lat. circle used in calcs.
c          l      =  no. vertical levels (also layers) in model
c***note: the user normally will modify only the imax and l parameters
c          nblw   =  no. freq. bands for approx computations. see
c                      bandta for definition
c          nblx   =  no. freq bands for approx cts computations
c          nbly   =  no. freq. bands for exact cts computations. see
c                      bdcomb for definition
c          inlte  =  no. levels used for nlte calcs.
c          nnlte  =  index no. of freq. band in nlte calcs.
c          nb,ko2 are shortwave parameters; other quantities are derived
c                    from the above parameters.
c
      include 'rdparm.h'

c     common block radisw contains input quantities generated by the
c     external module and used in the longwave and/or shortwave
c     radiation program:
c          ktop    =  index of (data level) pressure of cloud top,used
c                        in the longwave program
c          kbtm    =  index of (data level) pressure of cloud bottom,
c                        used in the longwave program
c          nclds   =  no. clouds at each grid pt.
c          ktopsw  =  index of (flux level) pressure of cloud top, used
c                        in the shortwave program
c          kbtmsw  =  index of (flux level) pressure of cloud bottom,
c                        used in the shortwave program
c          emcld   =  cloud emissivity. set to one by default, but may
c                        be modified for use in longwave program.
c          temp    =  temperature (k) at data levels of model
c          temp2   =  temperature (k) interpolated to half levels
c          press   =  pressure (cgs units) at data levels of model
c          press2  =  pressure (cgs units) at half levels of model
c          rh2o    =  mass mixing ratio (g/g) of h2o at model data lvls.
c          qo3     =  mass mixing ratio (g/g) of o3 at model data lvls.
c          camt    =  cloud amounts of clouds (their locations are
c                        specified in the ktop/kbtm indices)
c          cuvrf   =  reflectivity of clouds in the visible freq. band
c                        used in shortwave calcs. only
c          cirrf   =  reflectivity of clouds in the infrared freq. band
c                        used in shortwave calcs. only
c          cirab   =  absorptivity of clouds in the infrared freq. band
c                        used in shortwave calcs. only
c          rrco2   =  mass mixing ratio (g/g) of co2,used in shortwave
c                        calcs. only
c          coszro  =  zenith angle at grid pt. used on shortwave calcs.
c          taudar  =  fraction of day (or of timestep) that sun is above
c                        horizon. used in shortwave calcs.
c          ssolar  =  solar constant (at present,in ly/min). may vary
c                        over one year
c          rrvco2  =  co2 volume mixing ratio used in shortwave calcs.
c                        (this value must be the same as that used for
c                         longwave tables).

c***********************************************************************

c index cloud top bottom
      real rhg(ifull,kl)
      real sig(l)
!     real rcsw(l),rclw(l),aclw(l)
      real rhg1(l),sigf(l)
c     real cll(imax),clm(imax),clh(imax)
!     dimension cf(3),ktd(3),kbd(3),icld(2,3)
      dimension cf(l),ktd(l),kbd(l),icld(2,3)
      logical cldoff, begin
      save begin, ktophi,kbothi,ktopmi,kbotmi,ktoplo,kbotlo
      real drcsw(3), drclw(3), daclw(3), emclset(3)
c     define cloud props. for the 3 cloud types
c     high,mid,low
      data drcsw/.207,.534,.653/         
      data drclw/.190,.460,.500/          
      data daclw/.040,.200,.300/
      data emclset/.7,.85,1./     ! high, middle, low

      data begin/.true./
      data emcl/1./
      data icld /6*0/


c initialize the cloud and cloud index fields
c except for the ground layer (nc=1) the assumption is that
c no cloud exists. also, for this purpose, the cloud index is set
c at 1. (p=0)
c don't set cirrf, cuvrf, cirab at the surface because these are set
c the albedo by radfs.
      if(ntest.eq.1)print *,'entering cloud with ktau,imax,j,jd: ',
     .                                           ktau,imax,j,jd

c first, the ground layer (nc=1)
      do i=1,imax
        nclds (i)     =0   ! fixes previous error Mon  09-06-1999

        camt  (i,1)=1.
        emcld (i,1)=1.
        ktop  (i,1)=lp1
        kbtm  (i,1)=lp1
        ktopsw(i,1)=lp1
        kbtmsw(i,1)=lp1
      end do

c free atmosphere

      do k=2,lp1      ! i.e. 2,kl+1
        do i=1,imax
          camt  (i,k)=0.
          emcld (i,k)=1.
          cirrf (i,k)=0.
          cuvrf (i,k)=0.
          cirab (i,k)=0.
          ktop  (i,k)=1
          kbtm  (i,k)=1
          ktopsw(i,k)=1
          kbtmsw(i,k)=1
        end do
      end do

      if (.not.cldoff) then

        do ip=1,imax
          iq=ip+(j-1)*il
          do k=1,l
!           rhg1(k) = min(100.*rhg(ip,l+1-k),100.)
            rhg1(k) = min(100.*rhg(iq,l+1-k),100.)
            sigf(k) = sig(l+1-k)
          end do
          do k=1,l
            ktd (k) = 1
            kbd (k) = 1
            cf  (k) = 0.
          end do

c         call clddia ( rhg1,press1,temp1,sigf,cf,ktd,kbd,icld,land(ip) ) ! jlm
          call clddia ( rhg1,sigf,cf,ktd,kbd,icld,ip,j ) ! jlm

c         set cloud properties
!         call cldpro ( rcsw, rclw, aclw )
!         do nc = 1,3
!          rcsw(nc)=drcsw(nc)
!          rclw(nc)=drclw(nc)
!          aclw(nc)=daclw(nc)
!         end do

c         print *,' calculating indices '
c
c calculate index values of bottom and top of cloud layers (high,
c medium, and low)
c
          if(begin) then
            ktophi = kl - icld(1,1) + 1
            kbothi = kl - icld(2,1) + 1
            ktopmi = kl - icld(1,2) + 1
            kbotmi = kl - icld(2,2) + 1
            ktoplo = kl - icld(1,3) + 1
            kbotlo = kl - icld(2,3) + 1
            begin = .false.
          end if

c         print *,'ip,cf=',ip,cf

c now set cloud and cloud index fields depending on the no. of clouds
c note that numc=1 is sfc, numc=2 is lowest cloud, etc going up in atmosphere
c therefore, need to reverse order of clddia parameters

          numc=2
          do ncr=3,1,-1   ! Nov 2001
c           if(ntest.eq.1.and.j.eq.jd)print *,'ip,ncr ',ip,ncr
            if ( cf(ncr).gt.0. ) then
               nclds (ip)     =numc-1
               camt  (ip,numc)=cf  (ncr)
               ktop  (ip,numc)=ktd (ncr)
               kbtm  (ip,numc)=kbd (ncr)
               if(ntest.eq.1.and.j.eq.jd)
     .            print *,'ip,ncr,numc,cf ',ip,ncr,numc,cf(ncr)
               emcld (ip,numc)=emclset(ncr)   ! Nov 2001
               ktopsw(ip,numc)=ktd (ncr)
               kbtmsw(ip,numc)=kbd (ncr)+1
               cuvrf (ip,numc)=drcsw(ncr)    ! prev rcsw() etc
               cirrf (ip,numc)=drclw(ncr)
               cirab (ip,numc)=daclw(ncr)
               numc=numc+1
            endif
          end do !  ncr=3,1,-1

c         here set values of low, medium, high, and total cloud amounts
          cloudlo(iq) = cf(3)
          cloudmi(iq) = cf(2)
          cloudhi(iq) = cf(1)
          if(ntest.eq.1.and.j.eq.jd)then
            print *,'ip,cll,clm,clh '
     .              ,ip,cloudlo(iq),cloudmi(iq),cloudhi(iq)
            print *,'ip,camt(1-4) ',ip,(camt(ip,k),k=1,4)
            print *,'ip,nclds,emcld(1-4) ',
     .               ip,nclds(ip),(emcld(ip,k),k=1,4)
          endif
        end do     ! ip=1,imax

      endif

c the following handles overlapping shortwave indices.note that
c the bottom sw index is 1 greater than the corresponding lw index.
c then further adjustment is made,below,to avoid overlapping clouds.

      do 712 ip=1,imax

        if (nclds(ip).le.1) go to 712
        nclds0=nclds(ip)

        do i=2,nclds0
          if (ktopsw(ip,i).lt.kbtmsw(ip,i+1)) then
             if (ktopsw(ip,i).lt.kbtmsw(ip,i))  then
c case 1- if lower cloud is thick,add 1 to top index of lower cloud
                ktopsw(ip,i)=ktopsw(ip,i)+1
             else
c case 2- thick upper cloud.(it is not possible to have thin upper
c and lower clouds at once at the same index level.) subtract
c 1 from bottom index of upper cloud.
                kbtmsw(ip,i+1)=kbtmsw(ip,i+1)-1
             endif
          endif
        end do

 712  continue

      return
      end
